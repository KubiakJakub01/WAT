# This pipeline will be configured in Phase 2.
# It will be responsible for reading data from CSV files,
# parsing it, and sending it to the appropriate Elasticsearch index.

input {
  file {
    id => "airlines-csv"
    path => "/usr/share/logstash/data/airlines.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => "read"
    exit_after_read => true
  }
  file {
    id => "airports-csv"
    path => "/usr/share/logstash/data/airports.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => "read"
    exit_after_read => true
  }
  file {
    id => "flights-csv"
    path => "/usr/share/logstash/data/flights.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => "read"
    exit_after_read => true
  }
}

filter {
  if [id] == "airlines-csv" {
    csv {
      columns => ["airline_name","country_of_origin"]
      skip_header => true
    }
  } else if [id] == "airports-csv" {
    csv {
      columns => ["airport_code","name","city","country","location"]
      skip_header => true
    }
    mutate {
      rename => { "location" => "[location][lat]" }
      add_field => { "[location][lon]" => "" }
    }
    ruby {
      code => "
        parts = event.get('[location][lat]').split(',')
        if parts.length == 2
          event.set('[location][lat]', parts[0].strip.to_f)
          event.set('[location][lon]', parts[1].strip.to_f)
        end
      "
    }
  } else if [id] == "flights-csv" {
    csv {
      columns => ["flight_number","departure_airport_code","arrival_airport_code","departure_time","arrival_time","aircraft_id","airline_name","flight_duration","status"]
      skip_header => true
    }
    mutate {
      convert => {
        "flight_duration" => "integer"
      }
    }
    date {
      match => [ "departure_time", "ISO8601" ]
      target => "departure_time"
    }
    date {
      match => [ "arrival_time", "ISO8601" ]
      target => "arrival_time"
    }
  }
}

output {
  if [id] == "airlines-csv" {
    elasticsearch {
      hosts => ["http://es01:9200"]
      index => "airlines"
    }
  } else if [id] == "airports-csv" {
    elasticsearch {
      hosts => ["http://es01:9200"]
      index => "airports"
    }
  } else if [id] == "flights-csv" {
    elasticsearch {
      hosts => ["http://es01:9200"]
      index => "flights"
    }
  }
  stdout { codec => rubydebug }
} 